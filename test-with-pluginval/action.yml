name: 'Test with Pluginval'
description: download and run testing using Pluginval
inputs:
  build_dir :
    description: directory to use for the build
    required: true
  plugin :
    description : path and file name of the plugin to test
    required: true
  level :
    description : depth of testing
    required: false
    default: 10
runs:
  using: "composite"
  steps:
    - name: Linux Test
      if : runner.os == 'Linux'
      shell: bash
      run: |
        export DISPLAY=:0
        cd ${{inputs.build_dir}}
        curl -L "https://github.com/Tracktion/pluginval/releases/latest/download/pluginval_Linux.zip" \
             -o pluginval.zip
        unzip pluginval
        # Need to skip gui tests on linux
        ./pluginval --validate-in-process --strictness-level 10 \
          --output-dir "." "${{inputs.plugin}}" || exit 1

    - name : MacOS Test
      if : runner.os == 'macOS'
      shell: bash
      run: |
        cd ${{inputs.build_dir}}
        curl -L "https://github.com/Tracktion/pluginval/releases/latest/download/pluginval_macOS.zip" \
             -o pluginval.zip
        unzip pluginval
        pluginval.app/Contents/MacOS/pluginval --strictness-level 10 \
          --validate-in-process --output-dir "." "${{inputs.plugin}}" || exit 1

    - name : Winodws Test
      if : runner.os == 'Windows'
      shell : powershell
      run: |
        Set-Location ${{inputs.build_dir}}
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-WebRequest https://github.com/Tracktion/pluginval/releases/latest/download/pluginval_Windows.zip -OutFile pluginval.zip
        Expand-Archive pluginval.zip -DestinationPath .
        .\pluginval.exe --validate-in-process --strictness-level 10 `
          --output-dir "." "${{inputs.plugin}}" | Out-Host
        if ($LASTEXITCODE -ne 0 ) { Write-Error "FAILED!!!"; exit 1; }


